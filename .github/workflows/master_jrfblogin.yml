# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy API

on:
  push:
    branches:
      - master
    paths:
      - 'api/**'
      - 'package.json'
      - 'tsconfig.json'
  pull_request:
    branches:
      - master
    paths:
      - 'api/**'
      - 'package.json'
      - 'tsconfig.json'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: |
          cd api
          npm install

      - name: Build TypeScript files
        run: |
          cd api
          npm run build  # Assuming 'build' script in package.json runs 'tsc'

      - name: Zip artifact for deployment
        run: |
          cd api
          zip -r ../release.zip .  # Create the zip file in the workspace root

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip  # Zip file is in the workspace root

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
    permissions:
      id-token: write  # This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: List contents of workspace
        run: ls -la $GITHUB_WORKSPACE  # List contents of the workspace root

      - name: Unzip artifact for deployment
        run: unzip release.zip -d $GITHUB_WORKSPACE/api  # Unzip into the 'api' directory

      - name: List contents of unzipped directory
        run: ls -la $GITHUB_WORKSPACE/api  # Verify the unzipped contents

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'JRFBLogin'
          slot-name: 'Production'
          package: $GITHUB_WORKSPACE/api